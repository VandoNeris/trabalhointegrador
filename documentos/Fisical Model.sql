DROP DATABASE tractomaq;
CREATE DATABASE tractomaq;

\c tractomaq
SET datestyle TO "ISO,YMD";

CREATE TABLE IF NOT EXISTS pessoa (
  id_pessoa INT GENERATED BY DEFAULT AS IDENTITY,
  tipo BOOLEAN NOT NULL,
  nome VARCHAR(60) NOT NULL,
  ender VARCHAR(100) NOT NULL,
  cpf VARCHAR(11),
  cnpj VARCHAR(14),
  razaosocial VARCHAR(60),
  CONSTRAINT pk_pessoa PRIMARY KEY (id_pessoa),
  CONSTRAINT uk_cpf UNIQUE (cpf),
  CONSTRAINT uk_cnpj UNIQUE (cnpj),
  CONSTRAINT chk_cpf_cnpj CHECK (
    (tipo = FALSE AND cpf IS NOT NULL AND cnpj IS NULL) OR
    (tipo = TRUE AND cnpj IS NOT NULL AND cpf IS NULL)
  )
);
COMMENT ON COLUMN pessoa.tipo IS '0-Fisica 1-Juridica';

CREATE TABLE IF NOT EXISTS cobranca (
  id_cobranca INT GENERATED BY DEFAULT AS IDENTITY,
  dt_emissao DATE NOT NULL,
  dt_validade DATE NOT NULL,
  dt_final DATE,
  status_pag BOOLEAN NOT NULL,
  valor_final NUMERIC(12,2) NOT NULL,
  CONSTRAINT pk_cobranca PRIMARY KEY (id_cobranca),
  CONSTRAINT chk_dates CHECK (
    (dt_emissao <= dt_validade) AND 
    (dt_validade <= dt_final OR dt_final IS NULL)
  )
);
COMMENT ON COLUMN cobranca.status_pag IS '0-Pendente 1-Pago';

CREATE TABLE IF NOT EXISTS maquina (
  id_maquina INT GENERATED BY DEFAULT AS IDENTITY,
  nome VARCHAR(60) NOT NULL,
  descricao TEXT,
  CONSTRAINT pk_maquina PRIMARY KEY (id_maquina)
);

CREATE TABLE IF NOT EXISTS compra (
  id_compra INT GENERATED BY DEFAULT AS IDENTITY,
  dt_emissao DATE NOT NULL,
  dt_validade DATE NOT NULL,
  dt_final DATE,
  loc_entrega VARCHAR(100) NOT NULL,
  id_pessoa INT NOT NULL,
  CONSTRAINT pk_compra PRIMARY KEY (id_compra),
  CONSTRAINT fk_compra_pessoa FOREIGN KEY (id_pessoa) REFERENCES pessoa(id_pessoa),
  CONSTRAINT chk_dates CHECK (
    (dt_emissao <= dt_validade) AND 
    (dt_validade <= dt_final OR dt_final IS NULL)
  )
);

CREATE TABLE IF NOT EXISTS ordem_servico (
  id_os INT GENERATED BY DEFAULT AS IDENTITY,
  dt_os DATE NOT NULL,
  local VARCHAR(100) NOT NULL,
  descricao TEXT,
  id_pessoa INT NOT NULL,
  CONSTRAINT pk_ordem_servico PRIMARY KEY (id_os),
  CONSTRAINT fk_ordem_servico_pessoa FOREIGN KEY (id_pessoa) REFERENCES pessoa(id_pessoa)
);

CREATE TABLE IF NOT EXISTS servico (
  id_servico INT GENERATED BY DEFAULT AS IDENTITY,
  horas NUMERIC(4,2) NOT NULL,
  quilometros NUMERIC(6,2) NOT NULL,
  descricao TEXT,
  id_os INT NOT NULL,
  id_cobranca INT NOT NULL,
  CONSTRAINT pk_servico PRIMARY KEY (id_servico),
  CONSTRAINT fk_servico_ordem_servico FOREIGN KEY (id_os) REFERENCES ordem_servico(id_os),
  CONSTRAINT fk_servico_cobranca FOREIGN KEY (id_cobranca) REFERENCES cobranca(id_cobranca)
);

CREATE TABLE IF NOT EXISTS produtos (
  id_produtos INT GENERATED BY DEFAULT AS IDENTITY,
  nome VARCHAR(60) NOT NULL,
  quantidade INT NOT NULL,
  condicao INT NOT NULL,
  valor NUMERIC(12,2) NOT NULL,
  descricao TEXT,
  categoria VARCHAR(60) NOT NULL,
  marca VARCHAR(60) NOT NULL,
  id_servico INT NOT NULL,
  CONSTRAINT pk_produtos PRIMARY KEY (id_produtos)
);
--COMMENT ON COLUMN produtos.condicao IS '0-Pessimo 1-Mediano 2-Excelente';

CREATE TABLE IF NOT EXISTS compatibilidade (
  id_compatibilidade INT GENERATED BY DEFAULT AS IDENTITY,
  id_produtos INT NOT NULL,
  id_maquina INT NOT NULL,
  CONSTRAINT pk_compatibilidade PRIMARY KEY (id_compatibilidade),
  CONSTRAINT fk_compatibilidade_produtos FOREIGN KEY (id_produtos) REFERENCES produtos(id_produtos),
  CONSTRAINT fk_compatibilidade_maquina FOREIGN KEY (id_maquina) REFERENCES maquina(id_maquina)
);

CREATE TABLE IF NOT EXISTS consumocompra (
  id_consumocompra INT GENERATED BY DEFAULT AS IDENTITY,
  id_produtos INT NOT NULL,
  id_compra INT NOT NULL,
  CONSTRAINT pk_consumocompra PRIMARY KEY (id_consumocompra),
  CONSTRAINT fk_consumocompra_produtos FOREIGN KEY (id_produtos) REFERENCES produtos(id_produtos),
  CONSTRAINT fk_consumocompra_compra FOREIGN KEY (id_compra) REFERENCES compra(id_compra)
);

CREATE TABLE IF NOT EXISTS consumoservico (
  id_consumoservico INT GENERATED BY DEFAULT AS IDENTITY,
  id_produtos INT NOT NULL,
  id_servico INT NOT NULL,
  CONSTRAINT pk_consumoservico PRIMARY KEY (id_consumoservico),
  CONSTRAINT fk_consumoservico_produtos FOREIGN KEY (id_produtos) REFERENCES produtos(id_produtos),
  CONSTRAINT fk_consumoservico_servico FOREIGN KEY (id_servico) REFERENCES servico(id_servico)
);
