DROP DATABASE tractomaq;
CREATE DATABASE tractomaq;
\c tractomaq
SET datestyle TO "ISO,YMD";

CREATE TABLE IF NOT EXISTS usuario (
  id_usuario VARCHAR(60),
  senha VARCHAR(60) NOT NULL,
  tipo SMALLINT NOT NULL,
  CONSTRAINT pk_usuario PRIMARY KEY (id_usuario)
);
COMMENT ON COLUMN usuario.tipo IS '0-Administrador; 1-Regular';

CREATE TABLE IF NOT EXISTS pessoa (
  id_pessoa INT GENERATED BY DEFAULT AS IDENTITY,
  tipo SMALLINT NOT NULL,
  nome VARCHAR(60) NOT NULL,
  endereco VARCHAR(100) NOT NULL,
  email VARCHAR(60) NOT NULL,
  telefone VARCHAR(13) NOT NULL, 
  cpf VARCHAR(11),
  cnpj VARCHAR(14),
  razaosocial VARCHAR(60),
  CONSTRAINT pk_pessoa PRIMARY KEY (id_pessoa),
  CONSTRAINT uk_cpf UNIQUE (cpf),
  CONSTRAINT uk_cnpj UNIQUE (cnpj)
);
COMMENT ON COLUMN pessoa.tipo IS '0-Fisica; 1-Juridica';

CREATE TABLE IF NOT EXISTS cobranca (
  id_cobranca INT GENERATED BY DEFAULT AS IDENTITY,
  dt_emissao DATE NOT NULL,
  dt_vencimento DATE NOT NULL,
  dt_pagamento DATE,
  status_pag SMALLINT NOT NULL,
  valor NUMERIC(12,2) NOT NULL,
  CONSTRAINT pk_cobranca PRIMARY KEY (id_cobranca)
);
COMMENT ON COLUMN cobranca.status_pag IS '0-Pendente; 1-Paga; 2-Vencida';

CREATE TABLE IF NOT EXISTS maquina (
  id_maquina INT GENERATED BY DEFAULT AS IDENTITY,
  nome VARCHAR(60) NOT NULL,
  descricao TEXT,
  CONSTRAINT pk_maquina PRIMARY KEY (id_maquina)
);

CREATE TABLE IF NOT EXISTS compra (
  id_compra INT GENERATED BY DEFAULT AS IDENTITY,
  dt_emissao DATE NOT NULL,
  dt_vencimento DATE NOT NULL,
  dt_pagamento DATE,
  loc_entrega VARCHAR(100) NOT NULL,
  status_pag SMALLINT NOT NULL,
  valor NUMERIC(12,2) NOT NULL,
  id_pessoa INT NOT NULL,
  CONSTRAINT pk_compra PRIMARY KEY (id_compra),
  CONSTRAINT fk_compra_pessoa FOREIGN KEY (id_pessoa) REFERENCES pessoa(id_pessoa)
);
COMMENT ON COLUMN compra.status_pag IS '0-Pendente; 1-Paga; 2-Vencida';

CREATE TABLE IF NOT EXISTS ordemservico (
  id_ordemservico INT GENERATED BY DEFAULT AS IDENTITY,
  dt_ordemservico DATE NOT NULL,
  local VARCHAR(100) NOT NULL,
  descricao TEXT,
  id_pessoa INT NOT NULL,
  CONSTRAINT pk_ordemservico PRIMARY KEY (id_ordemservico),
  CONSTRAINT fk_ordemservico_pessoa FOREIGN KEY (id_pessoa) REFERENCES pessoa(id_pessoa)
);

CREATE TABLE IF NOT EXISTS servico (
  id_servico INT GENERATED BY DEFAULT AS IDENTITY,
  horas NUMERIC(5,2) NOT NULL,
  quilometros NUMERIC(6,2) NOT NULL,
  descricao TEXT,
  id_ordemservico INT NOT NULL,
  id_cobranca INT,
  CONSTRAINT pk_servico PRIMARY KEY (id_servico),
  CONSTRAINT fk_servico_ordemservico FOREIGN KEY (id_ordemservico) REFERENCES ordemservico(id_ordemservico),
  CONSTRAINT fk_servico_cobranca FOREIGN KEY (id_cobranca) REFERENCES cobranca(id_cobranca)
);

CREATE TABLE IF NOT EXISTS produtos (
  id_produto INT GENERATED BY DEFAULT AS IDENTITY,
  nome VARCHAR(60) NOT NULL,
  quantidade INT NOT NULL,
  valor NUMERIC(12,2) NOT NULL,
  descricao TEXT,
  categoria VARCHAR(60) NOT NULL,
  marca VARCHAR(60) NOT NULL,
  CONSTRAINT pk_produtos PRIMARY KEY (id_produto)
);

CREATE TABLE IF NOT EXISTS compatibilidade (
  id_compatibilidade INT GENERATED BY DEFAULT AS IDENTITY,
  id_produto INT NOT NULL,
  id_maquina INT NOT NULL,
  CONSTRAINT pk_compatibilidade PRIMARY KEY (id_compatibilidade),
  CONSTRAINT fk_compatibilidade_produtos FOREIGN KEY (id_produto) REFERENCES produtos(id_produto),
  CONSTRAINT fk_compatibilidade_maquina FOREIGN KEY (id_maquina) REFERENCES maquina(id_maquina)
);

CREATE TABLE IF NOT EXISTS consumocompra (
  id_consumocompra INT GENERATED BY DEFAULT AS IDENTITY,
  quantidade INT NOT NULL,
  id_produto INT NOT NULL,
  id_compra INT NOT NULL,
  CONSTRAINT pk_consumocompra PRIMARY KEY (id_consumocompra),
  CONSTRAINT fk_consumocompra_produtos FOREIGN KEY (id_produto) REFERENCES produtos(id_produto),
  CONSTRAINT fk_consumocompra_compra FOREIGN KEY (id_compra) REFERENCES compra(id_compra)
);

CREATE TABLE IF NOT EXISTS consumoservico (
  id_consumoservico INT GENERATED BY DEFAULT AS IDENTITY,
  quantidade INT NOT NULL,
  id_produto INT NOT NULL,
  id_servico INT NOT NULL,
  CONSTRAINT pk_consumoservico PRIMARY KEY (id_consumoservico),
  CONSTRAINT fk_consumoservico_produtos FOREIGN KEY (id_produto) REFERENCES produtos(id_produto),
  CONSTRAINT fk_consumoservico_servico FOREIGN KEY (id_servico) REFERENCES servico(id_servico)
);
